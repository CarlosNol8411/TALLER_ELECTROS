-- Crear la base de datos
CREATE DATABASE IF NOT EXISTS control_escolar;
USE control_escolar;

-- Tabla de Carreras
CREATE TABLE carreras (
    id_carrera INT AUTO_INCREMENT PRIMARY KEY,
    clave VARCHAR(10) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT
);

-- Tabla de Semestres
CREATE TABLE semestres (
    id_semestre INT AUTO_INCREMENT PRIMARY KEY,
    numero INT UNIQUE NOT NULL,
    nombre VARCHAR(50) NOT NULL
);

-- Tabla de Maestros
CREATE TABLE maestros (
    id_maestro INT AUTO_INCREMENT PRIMARY KEY,
    numero_control VARCHAR(20) UNIQUE NOT NULL,
    nombre_completo VARCHAR(100) NOT NULL,
    email VARCHAR(100),
    activo BOOLEAN DEFAULT TRUE,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla de Materias
CREATE TABLE materias (
    id_materia INT AUTO_INCREMENT PRIMARY KEY,
    matricula VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    unidades INT NOT NULL DEFAULT 5,
    id_maestro INT NOT NULL,
    activa BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (id_maestro) REFERENCES maestros(id_maestro)
);

-- Tabla de Alumnos (sin relación con carreras ni semestres)
CREATE TABLE alumnos (
    id_alumno INT AUTO_INCREMENT PRIMARY KEY,
    numero_control VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(50) NOT NULL,
    apellido_paterno VARCHAR(50) NOT NULL,
    apellido_materno VARCHAR(50),
    carrera_nombre VARCHAR(100) NOT NULL,
    semestre_nombre VARCHAR(50) NOT NULL,
    email VARCHAR(100),
    telefono VARCHAR(15),
    activo BOOLEAN DEFAULT TRUE,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla que relaciona Alumnos con Materias (muchos a muchos)
CREATE TABLE alumnos_materias (
    id_alumno_materia INT AUTO_INCREMENT PRIMARY KEY,
    id_alumno INT NOT NULL,
    id_materia INT NOT NULL,
    fecha_inscripcion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY (id_alumno, id_materia),
    FOREIGN KEY (id_alumno) REFERENCES alumnos(id_alumno) ON DELETE CASCADE,
    FOREIGN KEY (id_materia) REFERENCES materias(id_materia) ON DELETE CASCADE
);

-- Tabla de Calificaciones por unidad
CREATE TABLE calificaciones (
    id_calificacion INT AUTO_INCREMENT PRIMARY KEY,
    id_alumno INT NOT NULL,
    id_materia INT NOT NULL,
    unidad INT NOT NULL,
    calificacion DECIMAL(5,2) NOT NULL,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_alumno) REFERENCES alumnos(id_alumno) ON DELETE CASCADE,
    FOREIGN KEY (id_materia) REFERENCES materias(id_materia) ON DELETE CASCADE,
    UNIQUE KEY (id_alumno, id_materia, unidad)
);

-- Tabla que relaciona Alumnos con Materias, incluyendo el estado de regular o irregular
CREATE TABLE asignacion_materias (
    id_asignacion INT AUTO_INCREMENT PRIMARY KEY,
    numero_control VARCHAR(20) NOT NULL,    -- Número de control del alumno
    id_materia INT NOT NULL,                -- ID de la materia asignada
    estado ENUM('regular', 'irregular') NOT NULL,  -- Estado de la asignación (regular o irregular)
    fecha_asignacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Fecha de asignación
    FOREIGN KEY (numero_control) REFERENCES alumnos(numero_control) ON DELETE CASCADE,
    FOREIGN KEY (id_materia) REFERENCES materias(id_materia) ON DELETE CASCADE,
    UNIQUE KEY (numero_control, id_materia)  -- Asegura que un alumno no pueda estar asignado dos veces a la misma materia
);

-- Tabla de Grupos
CREATE TABLE grupos (
    id_grupo INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,            -- Nombre del grupo (Ej. Grupo 1A)
    id_semestre INT NOT NULL,               -- Relación con el semestre
    id_carrera INT NOT NULL,                -- Relación con la carrera
    FOREIGN KEY (id_semestre) REFERENCES semestres(id_semestre),
    FOREIGN KEY (id_carrera) REFERENCES carreras(id_carrera)
);

-- Tabla que relaciona Grupos con Materias
CREATE TABLE asignacion_grupal_materias (
    id_asignacion_grupal INT AUTO_INCREMENT PRIMARY KEY,
    id_grupo INT NOT NULL,                  -- ID del grupo
    id_materia INT NOT NULL,                -- ID de la materia
    fecha_asignacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Fecha de asignación
    FOREIGN KEY (id_grupo) REFERENCES grupos(id_grupo) ON DELETE CASCADE,
    FOREIGN KEY (id_materia) REFERENCES materias(id_materia) ON DELETE CASCADE,
    UNIQUE KEY (id_grupo, id_materia)      -- Asegura que un grupo no tenga la misma materia asignada dos veces
);



